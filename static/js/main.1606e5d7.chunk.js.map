{"version":3,"sources":["components/Header.js","components/AddTask.js","components/TaskCount.js","components/Task.js","components/TaskList.js","components/DoneTask.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","AddTask","state","taskDescription","addTask","props","addTaskFunc","taskDescriptionChanged","event","setState","target","value","type","placeholder","onChange","this","onClick","TaskCount","taskCount","Task","deleteClicked","deleteTaskFunc","item","id","doneClicked","completedTaskFunc","description","status","TaskList","taskCollection","map","taskItem","key","DoneTasks","Footer","App","tasks","componentDidMount","axios","get","then","response","data","catch","error","console","deleteTask","taskId","delete","updatedTasks","filter","completeTask","currentTasks","put","i","length","task","completed","taskToAdd","userId","post","push","DoneTask","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1606e5d7.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div className=\"row d-none d-md-block\">\n        <div className=\"col-12 header\">\n        <h2>\"If it weren't for the last minute, nothing would get done.” ― Rita Mae Brown </h2>        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass AddTask extends React.Component {\n\n    state = {\n        taskDescription: \"Enter your task...\"\n    }\n\n    addTask = () => {\n        this.props.addTaskFunc(this.state.taskDescription);\n    }\n\n    taskDescriptionChanged = (event) => {\n        this.setState({\n            taskDescription: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container addtask\">\n                <div className=\"row\">\n                    <div className=\"col-5 offset-4\">\n                        <h1>Add your task to the list here: </h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-5 offset-4\">\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Task to add....\"\n                                onChange={this.taskDescriptionChanged}\n                            />\n                            <div className=\"input-group-append\">\n                                <button className=\"btn addButton btn-outline-primary\" type=\"button\" onClick={this.addTask}>\n                                    Add\n              </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddTask;","import React from \"react\";\n\nclass TaskCount extends React.Component {\n  render() {\n    return (\n      <div className=\"row taskCountArea\">\n        <div className=\"col-12\">\n            <h1>Tasks Left: {this.props.taskCount}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TaskCount;","import React from \"react\";\n\nclass Task extends React.Component {\n\n    deleteClicked = () => {\n        this.props.deleteTaskFunc(this.props.item.id);\n    };\n\n    doneClicked = () => {\n        this.props.completedTaskFunc(this.props.item.id);\n    };\n\n\n\n    render() {\n        let description;\n\n        if (this.props.item.status) {\n            description = (\n                <div className=\"col-12 col-md-8 taskToDo\">\n                    {this.props.item.taskDescription}\n                </div>\n            );\n        } else {\n            description = (\n                <div className=\"col-12 col-md-8\">{this.props.item.taskDescription}</div>\n            );\n        }\n\n        return (\n            <div className=\"row taskRow\">\n                {description}\n                <div className=\"col-6 col-md-2\">\n                        <button type=\"button\" className=\"btn btn-success\" onClick={this.doneClicked}>\n                            Finished!\n                       </button>\n                </div>\n                <div className=\"col-6 col-md-2\">\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.deleteClicked}>\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nclass TaskList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"col-6 offset-3\">\n                {this.props.taskCollection.map(taskItem => (\n                    <Task\n                        key={taskItem.id}\n                        item={taskItem}\n                        deleteTaskFunc={this.props.deleteTaskFunc}\n                        completedTaskFunc={this.props.completedTaskFunc}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default TaskList;","import React from 'react';\n\nclass DoneTasks extends React.Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-6 offset-3\">\n            <h3 className=\"completedTitle\">Tasks Completed: </h3>\n         \n                {/* Add keys to each list item, set up like:\n                const people = ['Rowe', 'Prevost', 'Gare'];\n\nconst peopleLis = people.map((person, i) =>\n  // expression goes here:\n  <li key={'person_' + i}>{person}</li>;\n); */}\n              \n           \n            </div>\n          </div>\n          </div>\n    );\n  }\n}\n\nexport default DoneTasks;","import React from 'react';\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <div className=\"footer\">\n                <h4>Copyright: Laura Miller 2020</h4>\n            </div>\n        );\n    }\n};\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport AddTask from './components/AddTask';\nimport TaskCount from './components/TaskCount';\nimport TaskList from './components/TaskList';\nimport DoneTask from './components/DoneTask';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    tasks: []\n  };\n\n  // Need to establish an event that calls the tasks from our DB\n  // This is a lifecycle method\n  componentDidMount = () => {\n    // Fetch tasks from API\n    axios.get('https://7whki9pqp2.execute-api.eu-west-2.amazonaws.com/dev/tasks')\n      .then((response) => {\n        this.setState({\n          tasks: response.data.tasks\n        })\n      })\n     \n      .catch(function (error) {\n        // handle failure\n        console.error(error);\n      })\n  };\n\n  deleteTask = (taskId) => {\n    axios\n      .delete(\n        `https://7whki9pqp2.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskId}`\n      )\n      .then(response => {\n        // Next, identify the task that matches the given task Id and remove it\n        const updatedTasks = this.state.tasks.filter(item => item.taskId !== taskId);\n\n        // Update the state with the new collection of tasks (ie. without the one we deleted)\n        this.setState({\n          tasks: updatedTasks\n        });\n      })\n      .catch(error => {\n        // handle error\n        console.error(error);\n      });\n  };\n\n  completeTask = taskId => {\n    // Firstly get the list of tasks from state\n    const currentTasks = this.state.tasks;\n    // Next, identify the task that matches the given task id\n\n    axios\n      .put(\n        `https://l9usbtfbs5.execute-api.eu-west-2.amazonaws.com/dev/tasks/${taskId}`\n      )\n      .then(response => {\n        // handle success\n        for (let i = 0; i < currentTasks.length; i++) {\n          const task = currentTasks[i];\n          // change the completed status of the matched task\n          if (task.taskId === taskId) {\n            // add a toggle to change status\n            task.completed = !task.status;\n            break;\n          }\n          // Update the state with the new completed status\n        }\n        this.setState({\n          tasks: currentTasks\n        });\n      })\n      .catch(error => {\n        // handle error\n        console.error(error);\n      });\n  };\n\n  addTask = taskDescription => {\n    const taskToAdd = {\n    taskDescription: taskDescription,\n    userId: '1'\n    }\n\n  axios.post(\n      \"https://7whki9pqp2.execute-api.eu-west-2.amazonaws.com/dev/tasks\",\n      taskToAdd\n    )\n    .then(response => {\n      taskToAdd.id = response.data.task.taskId;\n\n      // Get the current list of tasks from state\n      const currentTasks = this.state.tasks;\n      // add the 'taskToAdd' to the array of tasks in state\n      currentTasks.push(taskToAdd);\n\n      // update the state\n      this.setState({\n        tasks: currentTasks\n      });\n    })\n    .catch(error => {\n      // handle error\n      console.error(error);\n    });\n\n  };\n\n\n  render() {\n    return (\n      <div className=\"container-fluid flex-fill\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Header />\n            <AddTask addTaskFunc={this.addTask} />\n            <TaskCount taskCount={this.state.tasks.length} />\n            <TaskList\n              taskCollection={this.state.tasks}\n              deleteTaskFunc={this.deleteTask}\n              completedTaskFunc={this.completeTask}\n            />\n            <DoneTask />\n            <Footer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}